# Generated by Django 2.0.6 on 2018-07-27 16:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import game.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('game', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommentLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GameBuyerData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dedicated_inventory', models.IntegerField()),
                ('order_demand', models.IntegerField(default=0)),
                ('on_order', models.IntegerField()),
                ('received_shipment', models.IntegerField()),
                ('fg_inventory', models.IntegerField(default=0)),
                ('backlog', models.IntegerField(default=0)),
                ('mean_p1', models.IntegerField()),
                ('mean_p2', models.IntegerField()),
                ('mean_p3', models.IntegerField()),
                ('mean_p4', models.IntegerField()),
                ('mean_current', models.IntegerField()),
                ('sd_p1', models.IntegerField()),
                ('sd_p3', models.IntegerField()),
                ('sd_p4', models.IntegerField()),
                ('sd_current', models.IntegerField()),
                ('fill_rate', models.FloatField()),
                ('smoothed_acc', models.FloatField()),
                ('avg_profit', models.FloatField()),
                ('accumulated_profit', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='GameParameterSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lead_time', models.IntegerField(default=4)),
                ('s_production_cost', models.FloatField(default=0.5)),
                ('s_holding_cost', models.FloatField(default=0.1)),
                ('s_wholesale_price', models.FloatField(default=1)),
                ('s_min_build', models.FloatField(default=0)),
                ('s_max_capacity', models.FloatField(default=1000)),
                ('b_holding_cost_small', models.FloatField(default=0.15)),
                ('b_holding_cost_medium', models.FloatField(default=0.15)),
                ('b_holding_cost_big', models.FloatField(default=0.15)),
                ('b_backlog_cost_small', models.FloatField(default=0.45)),
                ('b_backlog_cost_medium', models.FloatField(default=0.45)),
                ('b_backlog_cost_big', models.FloatField(default=0.45)),
                ('b_retail_pric_small', models.FloatField(default=2)),
                ('b_retail_price_medium', models.FloatField(default=2)),
                ('b_retail_price_big', models.FloatField(default=2)),
                ('b_mean_demand_small', models.FloatField(default=61)),
                ('b_mean_demand_medium', models.FloatField(default=111)),
                ('b_mean_demand_big', models.FloatField(default=200)),
                ('b_sd_demand_small', models.FloatField(default=6.1)),
                ('b_sd_demand_medium', models.FloatField(default=11.1)),
                ('b_sd_demand_big', models.FloatField(default=40)),
                ('buyer1_size', models.CharField(choices=[('S', 'small'), ('M', 'medium'), ('B', 'big')], default=('B', 'big'), max_length=1)),
                ('buyer2_size', models.CharField(choices=[('S', 'small'), ('M', 'medium'), ('B', 'big')], default=('B', 'big'), max_length=1)),
                ('buyer3_size', models.CharField(choices=[('S', 'small'), ('M', 'medium'), ('B', 'big')], default=('B', 'big'), max_length=1)),
                ('buyer4_size', models.CharField(choices=[('S', 'small'), ('M', 'medium'), ('B', 'big')], default=('B', 'big'), max_length=1)),
                ('buyer5_size', models.CharField(choices=[('S', 'small'), ('M', 'medium'), ('B', 'big')], default=('B', 'big'), max_length=1)),
                ('competing_supplier', models.BooleanField(default=False)),
                ('competing_supplier_charge', models.IntegerField(default=3)),
            ],
        ),
        migrations.CreateModel(
            name='GameSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exp_smooth_coeff', models.FloatField(default=0.3)),
                ('percent_remaining', models.FloatField(default=0.9)),
                ('percent_reassigned', models.FloatField(default=0.5)),
                ('num_periods', models.IntegerField(default=50)),
                ('dedicated_period', models.IntegerField(default=1)),
                ('buyer_lead_time', models.IntegerField(default=0)),
                ('seed', models.IntegerField(default=2)),
                ('supplier_backlog', models.BooleanField(default=True)),
                ('overall_supply_health', models.BooleanField(default=True)),
                ('reallocate_inventory', models.BooleanField(default=True)),
                ('demand_process', models.CharField(choices=[('S', 'Stationary'), ('L', 'LowHigh'), ('D', 'Diffusion')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='GameSupplierData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fill_rate', models.FloatField()),
                ('inventory_level', models.IntegerField()),
                ('profit', models.FloatField()),
                ('orders_received', models.IntegerField()),
                ('quantity_shipped', models.IntegerField()),
                ('production_quantity', models.IntegerField()),
                ('back_orders', models.IntegerField()),
                ('revenue', models.FloatField()),
                ('production_cost', models.FloatField()),
                ('inventory_cost', models.FloatField()),
                ('backlog_cost', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='GameSupplierSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocaton_rule', models.CharField(choices=[('M', 'Manual'), ('P', 'Proportional'), ('U', 'Uniform'), ('F', 'Forecast Accuracy')], max_length=1)),
                ('prod_strategy', models.CharField(choices=[('H', 'High'), ('M', 'Medium'), ('L', 'Low')], max_length=1)),
                ('supplier_avg_fill_rate', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='VisibilityGameSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_buyer_inventory', models.BooleanField(default=True)),
                ('supplier_buyer_demand', models.BooleanField(default=True)),
                ('ded_inv_buyer1', models.BooleanField(default=False)),
                ('ded_inv_buyer2', models.BooleanField(default=False)),
                ('ded_inv_buyer3', models.BooleanField(default=False)),
                ('ded_inv_buyer4', models.BooleanField(default=False)),
                ('ded_inv_buyer5', models.BooleanField(default=False)),
            ],
        ),
        migrations.RenameField(
            model_name='gamesession',
            old_name='num_periods',
            new_name='current_period',
        ),
        migrations.RemoveField(
            model_name='gamesession',
            name='game_status',
        ),
        migrations.RemoveField(
            model_name='gamesession',
            name='id',
        ),
        migrations.RemoveField(
            model_name='gamesession',
            name='supplier',
        ),
        migrations.AddField(
            model_name='gamesession',
            name='game_play',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='gamesessionmember',
            name='user_type',
            field=models.CharField(choices=[('S', 'Supplier'), ('B', 'Buyer'), ('GM', 'Game Manager')], default='B', max_length=1),
        ),
        migrations.AddField(
            model_name='gamesessionmessage',
            name='period',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='submission_period', to='game.GameSession'),
        ),
        migrations.AlterField(
            model_name='gamesession',
            name='date_created',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='gamesession',
            name='uri',
            field=models.URLField(default=game.models._generate_unique_uri, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='gamesessionmember',
            name='game_session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='session', to='game.GameSession'),
        ),
        migrations.AlterField(
            model_name='gamesessionmember',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='member_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='gamesessionmessage',
            name='game_session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='submission_session', to='game.GameSession'),
        ),
        migrations.AlterField(
            model_name='gamesessionmessage',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='submission_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='gamesessionmember',
            unique_together={('user', 'game_session')},
        ),
        migrations.RemoveField(
            model_name='gamesessionmessage',
            name='message',
        ),
        migrations.AlterUniqueTogether(
            name='gamesessionmessage',
            unique_together={('user', 'game_session', 'period')},
        ),
        migrations.AddField(
            model_name='visibilitygamesettings',
            name='game_session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='visibility', to='game.GameSession'),
        ),
        migrations.AddField(
            model_name='gamesuppliersettings',
            name='game_session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplier_settings_game', to='game.GameSession'),
        ),
        migrations.AddField(
            model_name='gamesuppliersettings',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplier_settings', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gamesupplierdata',
            name='game_session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplier_game', to='game.GameSession'),
        ),
        migrations.AddField(
            model_name='gamesupplierdata',
            name='period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplier_period', to='game.GameSession'),
        ),
        migrations.AddField(
            model_name='gamesupplierdata',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='supplier_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='gamesettings',
            name='game_session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='settings', to='game.GameSession'),
        ),
        migrations.AddField(
            model_name='gameparametersettings',
            name='game_session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='parameter', to='game.GameSession'),
        ),
        migrations.AddField(
            model_name='gamebuyerdata',
            name='game_session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='buyer_game', to='game.GameSession'),
        ),
        migrations.AddField(
            model_name='gamebuyerdata',
            name='period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='buyer_period', to='game.GameSession'),
        ),
        migrations.AddField(
            model_name='gamebuyerdata',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='buyer', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commentlog',
            name='game_session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comment_game', to='game.GameSession'),
        ),
        migrations.AddField(
            model_name='commentlog',
            name='period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comment_period', to='game.GameSession'),
        ),
        migrations.AddField(
            model_name='commentlog',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='comment_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='gamesuppliersettings',
            unique_together={('user', 'game_session')},
        ),
        migrations.AlterUniqueTogether(
            name='gamesupplierdata',
            unique_together={('user', 'game_session', 'period')},
        ),
        migrations.AlterUniqueTogether(
            name='gamebuyerdata',
            unique_together={('user', 'game_session', 'period')},
        ),
        migrations.AlterUniqueTogether(
            name='commentlog',
            unique_together={('user', 'game_session', 'period')},
        ),
    ]
